/* TODO: split into separate files */
:root {
  font-family: "Outfit", sans-serif;
  line-height: 1.5;
  font-weight: 400;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  /* colors */
  --text: #f2f5f9;
  --primary: #7429c6;
  --secondary: #c951e7;
  --letter-border: #4a5567;
  --letter-border-current: #672171;
  --word-bg: #4a5567;
  --word-shadow: 0px 4px 0px 0px #030616;
  --button-shadow: drop-shadow(0px 4px 0px #7b248a); /* filter: [value] */

  --card-padding: 1.5rem;
  --card-gap: 1.5rem;
  --card-max-width: 370px;
  --card-bg: #171e30;
  --word-padding: 12px;
  --letters-gap: 10px;
  --letters-margin-block: 2.5rem;
  --letter-padding: 8px 14px;

  --buttons-top-margin: 3rem;
  --buttons-gap: 18px;

  /* font sizes */
  --word-fs: 2rem;
  --letter-fs: 1.25rem;
  --info-fs: 0.875rem;
  --button-fs: 0.875rem;

  --alert-time-bar-duration: 3s;

  --bg-image-url: url("/bg-guess-the-word.jpg");
}
@supports (font-variation-settings: normal) {
  :root {
    font-family: "Outfit Variable", sans-serif;
  }
}
@media (max-width: 640px) {
  :root {
    --bg-image-url: url("/bg-guess-the-word-small.jpg");
  }
}

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
}

button {
  cursor: pointer;
}

button,
input {
  color: inherit;
  font: inherit;
}

body {
  display: flex;

  min-width: 320px;
  min-height: 100vh;
  min-height: 100svh;

  background:
    var(--bg-image-url) no-repeat,
    linear-gradient(to right, var(--primary), var(--secondary)),
    var(--card-bg) /* navigation bar buttons */;
  background-size: cover;
  background-position: center;
  padding: 2rem;

  color: var(--text);
}
@media (max-width: 767px) {
  body {
    padding: 1rem;
  }
}

h1 {
  font-size: 2rem;
  line-height: 1.1;
}

.game-card {
  display: flex;
  flex-direction: column;
  gap: var(--card-gap);

  margin: auto;
  width: min(var(--card-max-width), 100%);
  background-color: var(--card-bg);
  padding: var(--card-padding);
  border-radius: 12px;
}

.game-card__header {
  display: grid;
  grid-template-columns: 1fr auto 1fr;
  grid-template-areas: ". logo menu-trigger";
  align-items: center;

  --menu-trigger-bg: var(--primary);
  --menu-trigger-size: 1.75rem;
}

.game-card__logo {
  grid-area: logo;
}

.menu-trigger {
  grid-area: menu-trigger;

  display: grid;
  place-items: center;

  background-color: var(--menu-trigger-bg);
  border: none;
  border-radius: 7px;
  margin-left: auto;
  padding: var(--menu-trigger-padding, 0.075em 0.15em);

  transition: transform 0.2s ease;
}
.menu-trigger:hover {
  transform: scale(1.125);
}
.menu-trigger > svg {
  width: 1em;
  height: 1em;

  font-size: var(--menu-trigger-size, 1rem);

  pointer-events: none;
}

.game-card .word {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  column-gap: 1ch;

  background-color: var(--word-bg);
  padding: var(--word-padding);
  border-radius: 8px;
  border: none;
  box-shadow: var(--word-shadow);

  font-size: var(--word-fs);
  user-select: none;
}

.game-card .info {
  display: flex;
  justify-content: space-between;

  font-size: var(--info-fs);
  font-weight: 600;
}

.game-card .info .tries {
  display: flex;
  gap: 1em;
}
.game-card .info .tries__indicator {
  --step-color: var(--word-bg);
  --step-color-completed: var(--primary);
}

.stepper {
  display: flex;
  gap: var(--stepper-gap, 0.5em);
  align-items: center;
}
.stepper__step {
  aspect-ratio: 1;
  width: var(--step-size, 0.5em);
  border-radius: 50%;
  background-color: var(--step-color);
}
.stepper__step[data-completed] {
  background-color: var(--step-color-completed);
}

.game-card .typing {
  display: flex;
  gap: var(--letters-gap);
  justify-content: center;
  flex-wrap: wrap;

  margin-block: var(--letters-margin-block);

  font-size: var(--letter-fs);

  --caret-blink-duration: 2.25s;
}
.game-card .typing__letter {
  position: relative;

  width: 4ch;
  height: 4ch;
  border-radius: 10px;
  border: 2px solid var(--letter-border);

  overflow: hidden;
}
.game-card .typing__letter > input {
  width: 100%;
  height: 100%;
  outline: none;
  border: none;
  background-color: transparent;

  text-align: center;
  color: inherit;

  caret-color: transparent;
}
.game-card .typing__caret {
  position: absolute;
  bottom: 1ch;
  left: 0;
  right: 0;

  width: 1ch;
  height: 2px;
  margin: 0 auto;
  background-color: currentColor;

  animation: blink infinite both;
  -webkit-animation: blink infinite both;
  visibility: var(--caret-visibility, hidden);
}
.game-card .typing__letter--current {
  border-color: var(--letter-border-current);
  --caret-visibility: visible;
}
.game-card .typing__letter--current > input:focus + .typing__caret {
  animation-duration: var(--caret-blink-duration);
}
.game-card .typing__letter > input:disabled {
  pointer-events: none;
}

.game-card .actions {
  display: flex;
  justify-content: center;
  gap: var(--buttons-gap);
}
.game-card .actions__control {
  padding: 0.5em 2.5em;
  background-color: var(--secondary);
  border: none;
  border-radius: 12px;
  outline: none;

  font-weight: 600;

  filter: var(--button-shadow);

  transition: transform 0.2s ease;
}
.game-card .actions__control:hover,
.game-card .actions__control:focus {
  transform: translateY(-4px) scale(1.05);
}
.game-card .actions__control:disabled {
  pointer-events: none;
  opacity: 0.5;
}

@keyframes blink {
  0%,
  50%,
  100% {
    opacity: 1;
  }
  25%,
  75% {
    opacity: 0;
  }
}

/* TODO: add to @lib/alert class `.alert--top` */
/* it should be positioned at the top of the screen */
.alert {
  left: 0;
  right: 0;

  margin-inline: auto;
  width: fit-content;

  font-size: var(--letter-fs);

  transform: translateY(-100%) translateY(-1rem);
}
.alert--open {
  transform: translateY(0);
}
